#!/usr/bin/env bash
# ^^^ for syntax checking in the editor only

    #— pulled from inside your complete -F … function body

    local cur root cmd verbs_list verbs functions list suggestion filtered

    cmd=${COMP_WORDS[0]}             # e.g. “Distro”
    root=${COMP_WORDS[1]}            # first arg (your sub-command)
    cur=${COMP_WORDS[COMP_CWORD]}    # token under the cursor

    #— which of these are actual functions in this session?
    verbs_list="Require Action Source Distro Deploy"
    verbs=""
    for v in $verbs_list; do
        [ "$(type -t "$v")" = function ] && verbs="$verbs $v"
    done

    #— SLOT 1: first word of the command
    if [ "$COMP_CWORD" -eq 1 ]; then
        if [ -z "$cur" ]; then
            # empty prefix → only show your root verbs
            COMPREPLY=( $(compgen -W "$verbs" -- "") )
        else
            # non-empty → show *all* functions + commands matching prefix
            COMPREPLY=( \
              $(compgen -A function -- "$cur") \
              $(compgen -c           -- "$cur") \
            )
        fi
        # dedupe & sort
        COMPREPLY=( $(printf '%s\n' "${COMPREPLY[@]}" | sort -u) )
        return 0
    fi

    #— SLOT 2+: if the first word was a root verb, handle it specially
    case "$root" in
      Require)
        list=$(Distro --completion-require)
        COMPREPLY=( $(compgen -W "$list" -- "$cur") )
        return 0
        ;;
      Action)
        Require ListAllActions
        list=$(ListAllActions --completion)
        COMPREPLY=( $(
          printf '%s\n' "$list" |
            sed 's!/.*!/!'    |
            grep "^$cur"     |
            sort -u
        ) )
        return 0
        ;;
      Source)
        list=$(Distro --completion-source)
        COMPREPLY=( $(compgen -W "$list" -- "$cur") )
        return 0
        ;;
      Distro)
        list=$(Distro --completion-distro)
        COMPREPLY=( $(compgen -W "$list" -- "$cur") )
        return 0
        ;;
      Deploy)
        list=$(Distro --completion-deploy)
        COMPREPLY=( $(compgen -W "$list" -- "$cur") )
        return 0
        ;;
    esac

    #— FALLBACK: deeper slots or non-root first word → commands + files,
    #  but strip out your root verbs so they never reappear
    COMPREPLY=( \
      $(compgen -c -- "$cur") \
      $(compgen -f -- "$cur") \
    )
    filtered=()
    for suggestion in "${COMPREPLY[@]}"; do
        case " $verbs " in
          *" $suggestion "*) continue ;;  # drop any root verb
        esac
        filtered+=("$suggestion")
    done
    COMPREPLY=( "${filtered[@]}" )
    return 0
