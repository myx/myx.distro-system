#!/usr/bin/awk -f
# Usage:
#   printf '%s\n' file1 file2 ... | awk -v source="/path/to/dir" -f make_prj_list_esc_fixed.awk

BEGIN {
    want["Provides"]="PRJ-PRV-"
    want["Requires"]="PRJ-REQ-"
    want["Declares"]="PRJ-DCL-"
    want["Keywords"]="PRJ-KWD-"
    want["Augments"]="PRJ-AUG-"
}

# read relpaths from stdin
{
    rel = $0
    if (rel == "") next
    files[++fc] = rel
    filepath = source "/" rel "/project.inf"

	for (k in want) {
		data[rel,k] = rel
	}

    remainder = ""
    while ((getline raw < filepath) > 0) {
        line = raw
        sub(/\r$/, "", line)

        # continuation: ends with unescaped backslash
        if (match(line, /(^|[^\\])\\$/)) {
            sub(/\\$/, "", line)
            # keep a separating space so tokens from different continued lines don't join
            remainder = remainder line " "
            continue
        }
        if (remainder != "") {
            line = remainder line
            remainder = ""
        }

        # trim
        sub(/^[ \t]+/, "", line)
        sub(/[ \t]+$/, "", line)
        if (line == "") continue

        # split on first '=' or ':' using regexp match to get position
        if (match(line, /[=:]/)) {
            sep_pos = RSTART
            key = substr(line, 1, sep_pos - 1)
            value = substr(line, sep_pos + 1)
        } else {
            continue
        }

        sub(/^[ \t]+/, "", key); sub(/[ \t]+$/, "", key)
        sub(/^[ \t]+/, "", value); sub(/[ \t]+$/, "", value)

        if (key in want) {
            gsub(/[ \t]+/, " ", value)
            data[rel,key] = data[rel,key] " " value
        } else
		if (key == "Name") {
			for (k in want) {
				data[rel,k] = data[rel,k] " " value
			}
		}
    }
    close(filepath)
}

END {
    print "# Generated by myx.distro-system, single index"
    for (i = 1; i <= fc; i++) {
        rel = files[i]
        for (k in want) {
            prefix = want[k]
            v = data[rel,k]
            if (v == "") v = ""
            printf "%s%s=%s\n", prefix, rel, v
        }
    }
    # PRJS
    printf "PRJS="
    sep = ""
    for (i = 1; i <= fc; i++) { printf "%s%s", sep, files[i]; sep = " " }
    print ""
}
