#!/usr/bin/env bash
# ^^^ for syntax checking in the editor only

[ full != "$MDSC_DETAIL" ] || echo "> $MDSC_CMD: DistroSystemIndexMergedNoCache.include" >&2

set -e

if [ -z "$idx" ] || [ -z "$env" ] || [ -z "${cmd:0:1}" ]; then
	echo "⛔ ERROR: $MDSC_CMD: DistroSystemIndexMergedNoCache.include: invalid invocation specific vars expected!" >&2
	set +e ; return 1
fi

local key
case "$idx" in
	declares) key=DCL; ;;
	keywords) key=KWD; ;;
	provides) key=PRV; ;;
	augments) key=AUG; ;;
	*) 
		echo "⛔ ERROR: DistroSystemIndexMergedNoCache.include: unknown index name: $idx" >&2
		set +e ; return 1
	;;
esac

[ -z "$MDSC_DETAIL" ] || echo "| $MDSC_CMD: --all-${idx}-merged using awk index join" >&2

local indexFilter="$(
	DistroSystemContext --index-${idx} cat
)"
local indexSequence="$(
	DistroSystemContext --index-sequence-merged cat
)"

awk '
	FNR==NR {
		k = $1                     # join key from file1 (indexFilter)
		++cnt[k]
		f1b[k, cnt[k]] = $2
		next
	}
	{
		k = $2                     # join key from file2 (indexSequence)
		if (cnt[k] > 0) {
			for (i = 1; i <= cnt[k]; i++) {
				# print: 2.1,1.1,2.2,1.2
				printf "%s %s %s\n", $1, $2, f1b[k,i]
			}
		}
	}
' \
<( echo "$indexFilter" ) \
<( echo "$indexSequence" ) \
< /dev/null

return 0

join -1 2 -2 2 -o 2.1,1.1,2.2,1.2 \
	<( echo "$indexFilter" ) \
	<( echo "$indexSequence" ) \
| sort -n -k 1,2 | cut -d" " -f 3-

return 0 # 2s
