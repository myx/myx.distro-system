#!/usr/bin/env bash
# ^^^ for syntax checking in the editor only

set -e

local cmd sub cur roots_list roots list suggestion filtered

cmd="${COMP_WORDS[0]}"            # the command you invoked
sub="${COMP_WORDS[1]}"            # the 1st argument (if any)
cur="${COMP_WORDS[COMP_CWORD]}"   # what’s under the cursor

#── build the true “root verbs” list
roots_list="Require Action Source Distro Deploy"
roots=""
for v in $roots_list; do
	[ "$(type -t "$v")" = function ] && roots="$roots $v"
done

#── SLOT 1: only if the invoked CMD is NOT itself a root
if [ -z "$cmd" ] || [ "$COMP_CWORD" -eq 1 ] && ! printf '%s\n' $roots | grep -qx "$cmd" ; then
	# no prefix yet → only your roots
	COMPREPLY=( $(compgen -W "$roots" -- "") )
	# dedupe & sort
	COMPREPLY=( $(printf '%s\n' "${COMPREPLY[@]}" | sort -u) )
	return 0
fi

#── SLOT 2+: if the first word IS one of your roots, dispatch
case "$cmd" in
	Require)
		list=$(Distro --completion-require)
		if [ "$COMP_CWORD" -eq 1 ]; then
			COMPREPLY=( $(compgen -W "$list" -- "$cur") )
			return 0
		fi
		COMPREPLY=()    # eat the TAB, no suggestions
		return 1
	;;
	Action)
		# 1) Ensure ListAllActions() is loaded
		Require ListAllActions

		# 2) Grab the full “name[/path/…]” list
		local out suggestions
		out=$(ListAllActions --completion)

		# 3) If there’s already a slash in $cur → do full‐path completion
		if [[ "$cur" == */* ]]; then
			suggestions=( $( compgen -W "$out" -- "$cur" ) )
		else
			suggestions=( $( \
				printf '%s\n' "$out" | sed 's!/.*!/!' | sort -u | grep "$cur" \
			) )
			# prevent bash from appending a space after a match
			type compopt &>/dev/null && compopt -o nospace
		fi

		# 6) Return them
		COMPREPLY=( "${suggestions[@]}" )
		return 0
	;;
	Distro)
		if COMPREPLY=( $( Distro --completion-helper-system \
			"$COMP_LINE" "system" \
			'^\(Distro\|Source\|Deploy\|Remote\|Build\|Clean\|List\).*.fn.sh$' \
		) ) ; then
			return 0
		fi
		# otherwise fall through so default/file-name completion can fire	
	;;
	Source)
		if COMPREPLY=( $( Distro --completion-helper-system \
			"$COMP_LINE" "source" \
			'^\(DistroSource\|Source\|ListDistro\|ListAll\|Build\|Clean\|ListSource\).*.fn.sh$' \
		) ) ; then
			return 0
		fi
		# otherwise fall through so default/file-name completion can fire	
    ;;
	Deploy)
		if COMPREPLY=( $( Distro --completion-helper-system \
			"$COMP_LINE" "deploy" \
			'^\(DistroDeploy\|Deploy\|ListDistro\|ListAll\|CleanAll\).*.fn.sh$' \
		) ) ; then
			return 0
		fi
		# otherwise fall through so default/file-name completion can fire	
	;;
esac

set +e

COMPREPLY=( $(compgen -c -- "$cur") $(compgen -f -- "$cur") )
return 0

set +x
